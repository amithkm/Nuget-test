# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
parameters:
   ArtifactoryServiceConnectionName: ''
   ArtifactoryApiKey: ''
   MainProjectDirectory: ''
   Configuration: ''
   ProjectPath: '**/*.sln'
  SolutionPath: ''
  

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: ArtifactoryCredentialsManager@1
  inputs:
    artifactoryServiceConnection: ${{ parameters.ArtifactoryServiceConnectionName }}

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.8.0'
    checkLatest: true
- task: Cache@2
  inputs:
    key: '''nuget | "$(Agent.OS)" | **/packages.lock.json,!**/bin/**'''
    path: '$(NUGET_PACKAGES)'
    restoreKeys: |
      nuget | "$(Agent.OS)" 
      nuget
- task: NuGetCommand@2
  inputs:
    command: 'custom'
    arguments: '''sources Add -Name Artifactory -Source https://clouddsein.jfrog.io/artifactory/api/nuget/nuget -username amith -password ${{ parameters.ArtifactoryApiKey }}'''
- task: NuGetCommand@2
  inputs:
    command: 'custom'
    arguments: '''setapikey amith:${{ parameters.ArtifactoryApiKey }} -Source Artifactory'''
- task: NuGetCommand@2
  inputs:
    command: 'custom'
    arguments: 'sources Add -Name LocalCache -Source $(NUGET_PACKAGES)'
- task: PowerShell@2
  displayName: "Emit build details"
  inputs:
    targetType: 'inline'
    script: |
      $date = Get-Date -format "dd-MMM-yyyy HH:mm"
      echo buildtime:$date >> .buildinfo 
      echo commithash:$(Build.SourceVersion) >> .buildinfo 
      echo buildid:$(Build.BuildId) >> .buildinfo
    pwsh: true
    failOnStderr: true
    workingDirectory: '$(Build.SourcesDirectory)/${{ parameters.MainProjectDirectory }}'
- task: NuGetCommand@2
  displayName: 'Restore Packages'
  inputs:
    command: 'custom'
    arguments: 'restore ${{ parameters.SolutionPath }} -Source "$(NUGET_PACKAGES);https://clouddsein.jfrog.io/artifactory/api/nuget/nuget;http://www.nuget.org/api/v2/"'
- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    command: 'build'
    projects: '${{ parameters.ProjectPath }}'
    arguments: '--no-restore --configuration ${{ parameters.Configuration }}'
    configuration: '${{ parameters.Configuration }}'
